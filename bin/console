#!/usr/bin/env ruby

require 'irb'
require_relative '../lib/application.rb'

box_width30 = Integer(TTY::Screen.width * 0.3)
box_width70 = TTY::Screen.width - box_width30
box_height =  TTY::Screen.height - 4
display_line_count = box_height - 2


#require "curses"
#Curses.init_screen
#win = Curses::Window.new(Curses.lines, Curses.cols, 0, 0)
#win_left = win.subwin(box_height, box_width70, 0, 0)
#win_right = win.subwin(box_height, box_width30, 0, box_width70)
#win_left.box("|", "-")
#win_right.box("|", "-")
#win_left.setpos(2,3)
#win_left.addstr('lefttty mc left left')
#win_left.refresh
#win_right.setpos(2,3)
#win_right.addstr('righty right')
#win_right.refresh
#win.getch
#win.close
#exit

# clear the screen
puts "\e[H\e[2J"

pastel = Pastel.new
cursor = TTY::Cursor
prompt = TTY::Prompt.new

IRB.conf[:ECHO] = false
IRB.setup(__FILE__, argv: [])
workspace = IRB::WorkSpace.new(self)
binding_irb = IRB::Irb.new(workspace)

@lines_left = []
@lines_right = []
begin

  @lines_right = Application.event_store.read.to_a
  box_right = TTY::Box.frame width: box_width30, height: box_height, padding: 0, align: :center, top: 0, left: box_width70 do
    @lines_right.last(display_line_count).map { |e|
      "#{pastel.blue(e.class.name, ' ', pastel.green(e.metadata[:timestamp]), ' ', pastel.yellow(e.data))} } "
    }.join("\n")
  end
  print box_right

  box_left = TTY::Box.frame width: box_width70, height: box_height, padding: 0, align: :center, top: 0, left: 0 do
    @lines_left.last(display_line_count).join("\n")
  end
  print box_left

  print "\n"
  print cursor.clear_line
  command = prompt.ask('Command>')

  @lines_left << pastel.blue(command) +
                 pastel.yellow(' => ')

  result = binding_irb.context.evaluate(command, 1)
  @lines_left.last.concat(pastel.green(result.inspect))

rescue => e
  @lines_left.last.concat(pastel.red('ERR:' + e.inspect))
ensure
  @lines_left.last.concat(' ')
end while 1 == 1
